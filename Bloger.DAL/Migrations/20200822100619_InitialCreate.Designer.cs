// <auto-generated />
using Bloger.DAL.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bloger.DAL.Migrations
{
    [DbContext(typeof(BlogerDbContext))]
    [Migration("20200822100619_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bloger.DAL.Entities.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PasswordHash");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Bloger.DAL.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitleC")
                        .HasMaxLength(150);

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Bloger.DAL.Entities.Coments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspNetUsersId");

                    b.Property<string>("Description");

                    b.Property<int>("PostsID");

                    b.HasKey("ID");

                    b.HasIndex("AspNetUsersId");

                    b.HasIndex("PostsID");

                    b.ToTable("Coments");
                });

            modelBuilder.Entity("Bloger.DAL.Entities.Post_Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID");

                    b.Property<int>("PostsID");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("PostsID");

                    b.ToTable("Post_Category");
                });

            modelBuilder.Entity("Bloger.DAL.Entities.Posts", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspNetUsersId");

                    b.Property<string>("Description");

                    b.Property<string>("Photo");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("AspNetUsersId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Bloger.DAL.Entities.Coments", b =>
                {
                    b.HasOne("Bloger.DAL.Entities.AspNetUsers", "AspNetUsers")
                        .WithMany("Coments")
                        .HasForeignKey("AspNetUsersId");

                    b.HasOne("Bloger.DAL.Entities.Posts", "Posts")
                        .WithMany("Coments")
                        .HasForeignKey("PostsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bloger.DAL.Entities.Post_Category", b =>
                {
                    b.HasOne("Bloger.DAL.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bloger.DAL.Entities.Posts", "Posts")
                        .WithMany()
                        .HasForeignKey("PostsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bloger.DAL.Entities.Posts", b =>
                {
                    b.HasOne("Bloger.DAL.Entities.AspNetUsers", "AspNetUsers")
                        .WithMany("Posts")
                        .HasForeignKey("AspNetUsersId");
                });
#pragma warning restore 612, 618
        }
    }
}
